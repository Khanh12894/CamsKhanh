<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="access_denied" xml:space="preserve">
    <value>The resource owner or authorization server denied the request.</value>
  </data>
  <data name="invalid_client" xml:space="preserve">
    <value>Client authentication failed, such as if the request contains an invalid client ID or secret.</value>
  </data>
  <data name="invalid_credential" xml:space="preserve">
    <value>The username or password you entered is incorrect.</value>
  </data>
  <data name="invalid_grant" xml:space="preserve">
    <value>The username or password you entered is incorrect.</value>
  </data>
  <data name="invalid_grant1" xml:space="preserve">
    <value>Authorization Code expired</value>
  </data>
  <data name="invalid_request" xml:space="preserve">
    <value>Parameters missing, invalid parameter value provided, or parameters might be duplicates.</value>
  </data>
  <data name="invalid_scope" xml:space="preserve">
    <value>Scope is missing or not well-defined</value>
  </data>
  <data name="invalid_token" xml:space="preserve">
    <value>No access token provided</value>
  </data>
  <data name="server_error" xml:space="preserve">
    <value>Internal server error that can be used when a 500 error cannot be returned to the client.</value>
  </data>
  <data name="temporarily_unavailable" xml:space="preserve">
    <value>The server is currently unable to handle the request. Can be used in redirect scenarios where a 503 cannot be returned.</value>
  </data>
  <data name="unauthorized_client" xml:space="preserve">
    <value>Malformed request.</value>
  </data>
  <data name="unsupported_response_type" xml:space="preserve">
    <value>The authorization server does not support obtaining an authorization code using this method.</value>
  </data>
  <data name="DefaultError" xml:space="preserve">
    <value>An unknown failure has occurred.</value>
  </data>
  <data name="ConcurrencyFailure" xml:space="preserve">
    <value>Optimistic concurrency failure, object has been modified.</value>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>Incorrect password.</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Invalid token.</value>
  </data>
  <data name="LoginAlreadyAssociated" xml:space="preserve">
    <value>A user with this login already exists.</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>User name 'userName' is invalid, can only contain letters or digits.</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Email 'email' is invalid.</value>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>User Name 'userName' is already taken.OK</value>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>Email 'email' is already taken.</value>
  </data>
  <data name="InvalidRoleName" xml:space="preserve">
    <value>Role name 'role' is invalid.</value>
  </data>
  <data name="DuplicateRoleName" xml:space="preserve">
    <value>Role name 'role' is already taken.</value>
  </data>
  <data name="UserAlreadyHasPassword" xml:space="preserve">
    <value>User already has a password set.</value>
  </data>
  <data name="UserLockoutNotEnabled" xml:space="preserve">
    <value>Lockout is not enabled for this user.</value>
  </data>
  <data name="UserAlreadyInRole" xml:space="preserve">
    <value>User already in role 'role'.</value>
  </data>
  <data name="UserNotInRole" xml:space="preserve">
    <value>User is not in role 'role'.</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Passwords must be at least length characters.</value>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>Passwords must have at least one non alphanumeric character.</value>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>Passwords must have at least one digit ('0'-'9').</value>
  </data>
  <data name="PasswordRequiresLower" xml:space="preserve">
    <value>EN - Passwords must have at least one lowercase ('a'-'z').</value>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>Passwords must have at least one uppercase ('A'-'Z').</value>
  </data>
  <data name="ErrorGeneric" xml:space="preserve">
    <value>Error Generic</value>
  </data>
  <data name="required_field" xml:space="preserve">
    <value>This field is required.</value>
  </data>
  <data name="ErrorProcessing" xml:space="preserve">
    <value>Error in processing</value>
  </data>
  <data name="RequiredValid" xml:space="preserve">
    <value>Please enter value</value>
  </data>
  <data name="ErrorParamId" xml:space="preserve">
    <value>{0} is incorrect</value>
  </data>
  <data name="invalid_value" xml:space="preserve">
    <value>Invaid value</value>
  </data>
  <data name="required_number" xml:space="preserve">
    <value>This field is required number</value>
  </data>
  <data name="ErrorRequirementForVoucher" xml:space="preserve">
    <value>Can't create voucher, please check again!</value>
  </data>
  <data name="ErrorStatusInvalid" xml:space="preserve">
    <value>Status invalid for action</value>
  </data>
  <data name="ErrorQuantityAndAmount" xml:space="preserve">
    <value>Please check quantity</value>
  </data>
  <data name="IsUsed" xml:space="preserve">
    <value>This recored used</value>
  </data>
  <data name="CanNotDelete" xml:space="preserve">
    <value>Can't delete</value>
  </data>
  <data name="ErrorFileNotFound" xml:space="preserve">
    <value>File not found</value>
  </data>
  <data name="UserWasLocked" xml:space="preserve">
    <value>Your account was locked by admin</value>
  </data>
</root>